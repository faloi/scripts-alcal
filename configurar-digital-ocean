#!/bin/bash

if [ $# -lt 2 ]; then
  cat <<EOF
Este script necesita dos o tres argumentos para funcionar:
./configurar-digital-ocean <nombre-repositorio> <puerto> [<nombre-servicio>]

EJEMPLOS:
* Para crear un servicio con el mismo nombre del repositorio en nombre-repo.proyectos.sagradoalcal.edu.ar, en el puerto 3000:
./configurar-digital-ocean nombre-repo 3000

* Para crearlo con otro nombre, en el puerto 3001:
./configurar-digital-ocean nombre-repo 3001 nombre-servicio
EOF
  exit
fi

PROYECTO=$1
PUERTO=$2
SITIO=${3:-$PROYECTO}
URL_BASE=proyectos.sagradoalcal.edu.ar

paso() {
  TEXTO=$1
  VERDE='\033[0;32m'
  NC='\033[0m' # No Color
  echo -e "${VERDE}${TEXTO}${NC}"
}

clonar-repositorio() {
  paso "Clonamos el repositorio de GitLab"
  git clone http://gitlab.sagradoalcal.edu.ar/7-proyectos/$PROYECTO.git
}

agregar-script-deploy() {
  cd $PROYECTO
  paso "Le agregamos el código necesario para que después del deploy corra scripts de Rails"
  mkdir -p .escualo/install
  echo "bundle exec rake assets:precompile db:migrate" > .escualo/install/after
  git add .escualo
  git commit -m "Scripts necesarios para el deploy"

  echo "Agregamos al README del repo las instrucciones para hacer deploy"
  cat > README.md <<EOF
### Cómo subir al servidor (o, en lenguaje técnico, "hacer deploy")

\`\`\`bash
# Por única vez, se agrega el repositorio remoto:
git remote add servidor ssh://root@${URL_BASE}:22/var/repo/${SITIO}.git

# Se hace push como siempre, pero a servidor en vez de origin:
git push -f servidor master
\`\`\`
EOF

  git add README.md
  git commit -m "Instrucciones para hacer deploy"

  git push origin master
}

crear-artefacto() {
  paso "Creamos el artefacto en el servidor"
  escualo artifact create site $SITIO --hostname $URL_BASE --username root
}

configurar-nginx() {
  paso "Configuramos el nginx"
  cat > /tmp/$SITIO.conf <<EOF
server {
    listen 80;
    server_name ${SITIO}.${URL_BASE};
    root /var/www/${SITIO}/public;

    location / {
        proxy_set_header   X-Real-IP \$remote_addr;
        proxy_set_header   Host      \$host;
        proxy_pass         http://127.0.0.1:${PUERTO};
    }

    location ^~ /assets/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
    }
}
EOF
  scp /tmp/$SITIO.conf root@$URL_BASE:/etc/nginx/sites-enabled

  ssh root@$URL_BASE <<'ENDSSH'
service nginx restart
ENDSSH
}

clonar-repositorio
agregar-script-deploy
crear-artefacto
configurar-nginx
